version: '3.8'

services:
  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    container_name: fixidesk_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fixidesk_network

  # PostgreSQL for services that need it
  postgres:
    image: postgres:15
    container_name: fixidesk_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fixidesk
      POSTGRES_USER: fixidesk
      POSTGRES_PASSWORD: fixidesk_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fixidesk_network

  # Chatwoot - Customer Support Chat (disabled - restart issues)
  # chatwoot_web:
  #   image: chatwoot/chatwoot:latest
  #   container_name: fixidesk_chatwoot
  #   restart: unless-stopped
  #   command: |
  #     sh -c '
  #       bundle exec rails db:prepare &&
  #       bundle exec rails assets:precompile &&
  #       bundle exec rails server -b 0.0.0.0 -p 3000
  #     '
  #   environment:
  #     NODE_ENV: production
  #     RAILS_ENV: production
  #     INSTALLATION_ENV: docker
  #     SECRET_KEY_BASE: a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef12345678
  #     FRONTEND_URL: http://localhost:8080
  #     DEFAULT_LOCALE: en
  #     FORCE_SSL: false
  #     ENABLE_ACCOUNT_SIGNUP: true
  #     REDIS_URL: redis://redis:6379
  #     POSTGRES_HOST: postgres
  #     POSTGRES_PORT: 5432
  #     POSTGRES_USERNAME: fixidesk
  #     POSTGRES_PASSWORD: fixidesk_password
  #     POSTGRES_DATABASE: chatwoot
  #     MAILER_SENDER_EMAIL: ${CHATWOOT_MAILER_SENDER_EMAIL:-noreply@fixidesk.com}
  #     SMTP_DOMAIN: ${CHATWOOT_SMTP_DOMAIN:-fixidesk.com}
  #     SMTP_ADDRESS: ${CHATWOOT_SMTP_HOST:-smtp.gmail.com}
  #     SMTP_PORT: ${CHATWOOT_SMTP_PORT:-587}
  #     SMTP_USERNAME: ${CHATWOOT_SMTP_USERNAME}
  #     SMTP_PASSWORD: ${CHATWOOT_SMTP_PASSWORD}
  #     SMTP_AUTHENTICATION: plain
  #     SMTP_ENABLE_STARTTLS_AUTO: true
  #   ports:
  #     - "8080:3000"
  #   depends_on:
  #     - postgres
  #     - redis
  #   volumes:
  #     - chatwoot_data:/app/storage
  #   networks:
  #     - fixidesk_network

  # Tiledesk - Conversational AI Platform (disabled - restart issues)
  # tiledesk:
  #   image: tiledesk/tiledesk-server:latest
  #   container_name: fixidesk_tiledesk
  #   restart: unless-stopped
  #   environment:
  #     MONGODB_URI: mongodb://mongo:27017/tiledesk
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     JWT_KEY: your_jwt_secret_key_here
  #     CHAT21_ENABLED: true
  #     CHAT21_URL: http://localhost:8082
  #     EMAIL_ENABLED: true
  #     EMAIL_HOST: ${TILEDESK_SMTP_HOST:-smtp.gmail.com}
  #     EMAIL_PORT: ${TILEDESK_SMTP_PORT:-587}
  #     EMAIL_USERNAME: ${TILEDESK_SMTP_USERNAME}
  #     EMAIL_PASSWORD: ${TILEDESK_SMTP_PASSWORD}
  #     EMAIL_FROM_ADDRESS: ${TILEDESK_FROM_EMAIL:-noreply@fixidesk.com}
  #     WEBHOOK_ENABLED: true
  #   ports:
  #     - "8082:3000"
  #   depends_on:
  #     - mongo
  #     - redis
  #   networks:
  #     - fixidesk_network

  # MongoDB for Tiledesk
  mongo:
    image: mongo:5
    container_name: fixidesk_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - fixidesk_network

  # EspoCRM - Customer Relationship Management
  espocrm:
    image: espocrm/espocrm:latest
    container_name: fixidesk_espocrm
    restart: unless-stopped
    environment:
      ESPOCRM_DATABASE_HOST: postgres
      ESPOCRM_DATABASE_NAME: espocrm
      ESPOCRM_DATABASE_USER: fixidesk
      ESPOCRM_DATABASE_PASSWORD: fixidesk_password
      ESPOCRM_ADMIN_USERNAME: admin
      ESPOCRM_ADMIN_PASSWORD: admin123
      ESPOCRM_SITE_URL: http://localhost:8081
    ports:
      - "8081:80"
    depends_on:
      - postgres
    volumes:
      - espocrm_data:/var/www/html
    networks:
      - fixidesk_network

  # Mautic - Marketing Automation
  mautic:
    image: mautic/mautic:latest
    container_name: fixidesk_mautic
    restart: unless-stopped
    environment:
      MAUTIC_DB_HOST: postgres
      MAUTIC_DB_NAME: mautic
      MAUTIC_DB_USER: fixidesk
      MAUTIC_DB_PASSWORD: fixidesk_password
      MAUTIC_TRUSTED_PROXIES: 0.0.0.0/0
      MAUTIC_MAILER_FROM_EMAIL: ${MAUTIC_MAILER_FROM_EMAIL:-noreply@fixidesk.com}
      MAUTIC_MAILER_FROM_NAME: ${MAUTIC_MAILER_FROM_NAME:-FixiDesk}
      MAUTIC_MAILER_HOST: ${MAUTIC_MAILER_HOST:-smtp.gmail.com}
      MAUTIC_MAILER_PORT: ${MAUTIC_MAILER_PORT:-587}
      MAUTIC_MAILER_USERNAME: ${MAUTIC_MAILER_USERNAME}
      MAUTIC_MAILER_PASSWORD: ${MAUTIC_MAILER_PASSWORD}
      MAUTIC_MAILER_ENCRYPTION: tls
    ports:
      - "8083:80"
    depends_on:
      - postgres
    volumes:
      - mautic_data:/var/www/html
    networks:
      - fixidesk_network

  # n8n - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: fixidesk_n8n
    restart: unless-stopped
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: fixidesk
      DB_POSTGRESDB_PASSWORD: fixidesk_password
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      WEBHOOK_URL: http://localhost:5678
      GENERIC_TIMEZONE: UTC
    ports:
      - "5678:5678"
    depends_on:
      - postgres
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - fixidesk_network

  # Nginx Reverse Proxy (commented out - nginx.conf file missing)
  # nginx:
  #   image: nginx:alpine
  #   container_name: fixidesk_nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - chatwoot_web
  #     - tiledesk
  #     - espocrm
  #     - mautic
  #     - n8n
  #   networks:
  #     - fixidesk_network

volumes:
  redis_data:
  postgres_data:
  mongo_data:
  chatwoot_data:
  espocrm_data:
  mautic_data:
  n8n_data:

networks:
  fixidesk_network:
    driver: bridge

